//==============================================================================
// ファイル名: test-operators.kir
//==============================================================================
// 【目的】
// 全ての演算子（算術、ビット、シフト、単項、複合代入）が正しく動作することを確認
//
// 【解説】
// - データセクション初期化
// - 二項演算: +, -, *, /s, %s, &, |, ^, <<, >>s
// - 単項演算: -, ~
// - 複合代入: +=, *=
// - 各演算の結果を次の演算で使用し、最終的に単一の値に集約
//
// 【期待される結果】
// Exit code: 31
//==============================================================================

[data + 0] = 100
[data + 8] = 30
[data + 16] = 7
[data + 24] = 3
[data + 32] = 2

// 加算: 100 + 30 = 130
[sp + 0] = [data + 0] + [data + 8]

// 減算: 130 - 30 = 100
[sp + 0] = [sp + 0] - [data + 8]

// 乗算: 100 * 2 = 200
[sp + 0] = [sp + 0] * [data + 32]

// 符号付き除算: 200 / 7 = 28
[sp + 0] = [sp + 0] /s [data + 16]

// 剰余: 28 % 7 = 0
[sp + 8] = [sp + 0] %s [data + 16]

// AND: 28 & 7 = 4
[sp + 16] = [sp + 0] & [data + 16]

// OR: 4 | 3 = 7
[sp + 16] = [sp + 16] | [data + 24]

// XOR: 7 ^ 3 = 4
[sp + 16] = [sp + 16] ^ [data + 24]

// 左シフト: 4 << 2 = 16
[sp + 16] = [sp + 16] << [data + 32]

// 算術右シフト: 16 >> 2 = 4
[sp + 16] = [sp + 16] >>s [data + 32]

// NOT: ~4 = -5 (2の補数)
[sp + 24] = ~[sp + 16]

// 符号反転: -(-5) = 5
[sp + 24] = -[sp + 24]

// 複合代入テスト
[sp + 32] = 10
[sp + 32] += [data + 24]  // 10 + 3 = 13
[sp + 32] *= [data + 32]  // 13 * 2 = 26

// 最終結果: 5 + 26 = 31
[sp + 0] = [sp + 24] + [sp + 32]

syscall ExitProcess, [sp + 0]


goto END
